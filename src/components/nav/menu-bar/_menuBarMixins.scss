@use '../../../styles/lib/refs';
@use '../../button/Button.variants' as buttons;
@use './menuBarAnimationMixin' as animations;
@import '../../../styles/lib/hooks';

@mixin caret-mixin($var) {
	.caret {
		transition: transform 250ms ease;

		@include use-text-color($var);
	}

	[data-state='open'] > .caret {
		@include use-transform($var);
	}
}

@mixin indicator-mixin($var) {
	--indicator-height: 10px;
	--bar-height: 40px;

	display: flex;
	align-items: flex-end;
	justify-content: center;
	height: var(--indicator-height);
	top: calc(var(--bar-height) - var(--indicator-height));
	overflow: hidden;
	z-index: 2;
	transition: width, transform 250ms ease;

	@include animations.indicator-animations($var);
}

@mixin arrow-mixin($var) {
	position: relative;
	top: 70%;
	width: 12px;
	height: 12px;
	border-top-left-radius: 2px;

	@include use-transform($var);
	@include use-background-color($var);
}

@mixin viewport-mixin($var) {
	width: 100%;
	position: relative;
	transform-origin: top center;
	overflow: hidden;
	height: var(--radix-navigation-menu-viewport-height);
	transition: width, height, 300ms ease;

	@include animations.viewport-animations($var);
	@include use-background-color($var);
	@include use-radius($var);
	@include use-shadow($var);
}

@mixin viewport-position-mixin($var) {
	position: absolute;
	display: flex;
	justify-content: center;
	top: 100%;
	perspective: 2000px;

	@include use-width($var);
}

@mixin content-mixin($var) {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	box-sizing: border-box;
	margin: 0;

	@include animations.content-animations($var);
}

@mixin list-mixin {
	// @include use-direction(locale);

	display: flex;
	justify-content: center;
	list-style: none;
	padding: 0;
	margin: 0;
}

@mixin trigger-button-mixin($module, $states) {
	@include buttons.topbar-menu-trigger;

	// // this `hover` state aims to fix the slight delay in applying
	// // background-color to the menu trigger which his based on its
	// // `open` state
	// &[data-state='open'],
	// &:hover {
	// 	// @include use-background-color($module, state(opened, $states));

	// 	// .caret {
	// 	// 	// @include use-text-color(#{$module}-caret, state(hovered, $states));
	// 	// }
	// }
}
