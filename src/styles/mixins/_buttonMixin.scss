@import '../lib/themeVars';
@import '../lib/refs';
@import '../lib/states';
@import '../lib/merge';

$states: deep(
	$COMPONENT_STATES,
	(
		selected: selected,
	)
);

@function getBgColor($var, $state) {
	@return compRef($var, background-color, $state);
}

@function getTextColor($var, $state) {
	@return compRef($var, text-color, $state);
}

@function getFontWeight($var, $state) {
	@return compRef($var, font-weight, $state);
}

$bgVar: varName(site-button-toggle-background-color);
$textColorVar: varName(site-button-toggle-text-color);
$fontWeightVar: varName(site-button-toggle-font-weight);

@mixin IconMixin($var) {
	.icon {
		@include useIconColor($var);
	}

	&:hover {
		.icon {
			@include useIconColor($var, state(hovered));
		}
	}
}

@mixin TextLinkMixin {
	@include useTextColor(link);

	&:hover {
		@include useTextColor(link, state(hovered));
	}
}

@mixin MenuTriggerButtonMixin($var: site-mixins-toggle-button) {
	@include clearBorder;
	@include disableUserSelection;
	@include useHeight($var);
	@include useRadius($var);
	@include useTextColor($var);
	@include useBackgroundColor($var);
	@include useFontWeight($var);
	@include IconMixin($var);
}

@mixin ToggleButtonMixin($var: site-button-toggle) {
	display: inline-flex;
	align-items: center;
	justify-content: center;

	@include MenuTriggerButtonMixin;
	@include useWidth($var);
	@include useTextColor($var);

	&:not([data-state='selected']):hover {
		@include cursorPointer;
		@include useTextColor($var, state(hovered));
		@include useBackgroundColor($var, state(hovered));
	}

	// `selected` state overrides
	&[data-state='selected'] {
		#{$bgVar}: #{getBgColor($var, state(selected))};
		#{$textColorVar}: #{getTextColor($var, state(selected))};
		#{$fontWeightVar}: #{getFontWeight($var, state(selected))};
	}
}

@mixin IconButtonWithLabelMixin {
	overflow: hidden;

	@include disableUserSelection;

	.icon {
		color: #000;
		border-radius: 6px;
		display: flex;
		height: 32px;
		width: 32px;
		align-items: center;
		justify-content: center;

		// padding: 4px;
	}

	.label {
		position: relative;
		top: -10px;
		margin: 0 0.5em;
		opacity: 0;
		transition: 125ms all ease-in-out;
	}

	&:hover {
		.icon {
			background-color: ref(color-container-main);
		}

		.label {
			top: 0;
			display: block;
			opacity: 1;
		}
	}
}

// @mixin Default {
// 	--text-color: magenta;
// 	// --button-mixin-background-color: magenta;

// 	background-color: var(--button-background-color);
// 	border-radius: var(--button-border-radius);
// 	color: var(--text-color);
// 	text-decoration: none;

// 	&:hover {
// 		color: var(--text-color);
// 		background-color: var(--button-background-color__hover);
// 	}

// 	&:active {
// 		color: green; //var(--text-color);
// 		background-color: var(--button-background-color__active);
// 	}
// }
